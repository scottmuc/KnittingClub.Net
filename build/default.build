<?xml version="1.0"?>
<project name="KnittingClub">
	<property name="nant.settings.currentframework" value="net-3.5" />
	<property name="debug" value="true" />
	<property name="project.name" value="${project::get-name()}"/>	
	
	<!-- directories -->
	<property name="base.dir" value="${directory::get-parent-directory(project::get-base-directory())}" />
  
	<property name="third.party.dir" value="${base.dir}\thirdparty"/>
    <property name="thirdparty.tools.dir" value="${third.party.dir}\tools" />
    <property name="thirdparty.lib.dir" value="${third.party.dir}\libs" />
  
    <property name="build.dir" value="${base.dir}\build"/>
	<property name="config.dir" value="${build.dir}\config" />
    <property name="build.artifacts.dir" value="${build.dir}\buildartifacts" />
    <property name="compile.dir" value="${build.artifacts.dir}" />
  
	<property name="code.dir" value="${base.dir}\code"/>
    <property name="src.dir" value="${code.dir}\src"/>
    <property name="web.dir" value="${code.dir}\www" />
	<!-- end directories -->
	
	<!-- file names -->	
	<property name="project.lib" value="${project::get-name()}.dll"/>	
	<property name="project.test.lib" value="${project::get-name()}.Tests.dll"/>	
    <!-- end file names -->
	
	
	<fileset id="product.app.sources" >
		<include name="${src.dir}\${project.name}\**\*.cs"/>	  
		<exclude name="${src.dir}\**\AssemblyInfo.cs" />	
	</fileset>
    
    <fileset id="product.test.sources">
    	<include name="${src.dir}\${project.name}.Tests\**\*.cs"/>	  
		<exclude name="${src.dir}\**\AssemblyInfo.cs" />	
    </fileset>

	<fileset id="product.references">	
    	<include name="${thirdparty.lib.dir}\sqlite\bin\System.Data.SQLite.dll" />
    
        <include name="${thirdparty.lib.dir}\castle\Castle.Core.dll" />
        <include name="${thirdparty.lib.dir}\castle\Castle.DynamicProxy2.dll" />
        <include name="${thirdparty.lib.dir}\castle\Castle.Facilities.NHibernateIntegration.dll" />
        <include name="${thirdparty.lib.dir}\castle\Castle.MicroKernel.dll" />
        <include name="${thirdparty.lib.dir}\castle\Castle.Windsor.dll" />
    
        <include name="${thirdparty.lib.dir}\nhibernate\NHibernate.dll" />
        <include name="${thirdparty.lib.dir}\nhibernate\NHibernate.ByteCode.Castle.dll" />
    
        <include name="${thirdparty.lib.dir}\rhino-tools\Rhino.Commons.dll" />        	
   	</fileset>	
	
	<fileset id="resource.references" >
		<include name="${src.dir}\KnittingClub\Domain\*.xml"/>
	</fileset>	
	
	<target name="clean" description="remove all build products">
		<delete dir="${build.artifacts.dir}" />
	</target>
	
	<target name="init" depends="clean">
		<mkdir dir="${build.artifacts.dir}" />
	</target>	
	
	<target name="compile" depends="init">
		<csc output="${compile.dir}\${project.lib}" target="library" debug="${debug}">
			<sources refid="product.app.sources" />			
			<references refid="product.references"/>
			<resources refid="resource.references"/>
		</csc>
	</target>
    
    <target name="test.compile">
        <csc output="${compile.dir}\${project.test.lib}" target="library" debug="${debug}">
            <sources refid="product.test.sources" />
            <references>            
                <include name="${compile.dir}/${project.lib}" />
                <include name="${thirdparty.tools.dir}\xunit\xunit.dll" />	
            </references>
        </csc>
    </target>
    
    <target name="test" depends="compile, test.compile, test.init">
        <property name="test.runner.path" value="${thirdparty.tools.dir}/xunit/" />
        <property name="test.runner.exe" value="xunit.console.exe" />
    
        <exec workingdir="${compile.dir}" 
            basedir="${test.runner.path}" 
            program="${test.runner.exe}"
            commandline="${project.test.lib}" />
    </target>
    
    <target name="test.init">
        <copy todir="${compile.dir}">
            <fileset basedir="${thirdparty.tools.dir}/xunit/">
                <include name="*.dll" />
            </fileset>
        </copy>
        <copy todir="${compile.dir}">
            <fileset refid="product.references" />
        </copy>
    </target>

    <target name="all" description="Builds everything, runs tests, and sets up local web site config"
        depends="clean, init, compile, test">
    </target>
    
</project>
